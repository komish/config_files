{
	// For use when writing tests with the Ginkgo framework.
	// Enables <TAB> completion to move the cursor from the required label
	// (e.g. Context, It, etc.), the description string, and the closure.
	"Add a ginkgo test block": {
		"prefix": "gkg",
		"body": [
			"${1:Context}(\"$2\", func() {$3})"
		],
		"description": "Insert a Ginkgo test block function"
	}
	// For use when writing custom GomegaMatchers. The snippet will insert an
	// type definition that you define, an accessor method that is exported on <TAB> completion,
	// and scaffold the necessary methods to fulfill the GomegaMatcher interface.
	"Add a gomega matcher": {
		"prefix": "gmtch",
		"body": [
			"// ${1/(.*)/${1:/capitalize}/} is...",
			"func ${1/(.*)/${1:/capitalize}/}() types.GomegaMatcher {",
			"\treturn &${1}Matcher{}",
			"}",
			"",
			"type ${1:yourAssertion}Matcher struct{}",
			"",
			"func (matcher *${1}Matcher) Match(actual interface{}) (bool, error) {",
			"\t// your code here",
			"\treturn false, nil",
			"}",
			"",
			"func (matcher *${1}Matcher) FailureMessage(actual interface{}) string {",
			"\t// your code here",
			"\treturn \"\"",
			"}",
			"",
			"func (matcher *${1}Matcher) NegatedFailureMessage(actual interface{}) string {",
			"\t// your code here",
			"\treturn \"\"",
			"}"
		],
        "description": "Create a new GomegaMatcher type definition, an accessor, and the necessary methods to fulfill the interface"
	}
	"Create BubbleTea Model": {
		"prefix": "teamodel",
		"body": [
			"func New() *${1:model} {",
			"\treturn &${1:model}{}",
			"}",
			"",
			"// Ensure that model implements the tea.Model interface.",
			"var _ tea.Model = &${1:model}{}",
			"",
			"type ${1:model} struct {}",
			"",
			"func (m *${1:model}) Init() tea.Cmd {",
			"\treturn nil",
			"}",
			"",
			"func (m *${1:model}) Update(msg tea.Msg) (tea.Model, tea.Cmd) {",
			"\tswitch msg.(type) {",
			"\tcase tea.KeyMsg:",
			"\t\treturn m, tea.Quit",
			"\t}",
			"\treturn m, nil",
			"}",
			"",
			"func (m *${1:model}) View() string {",
			"\treturn \"placeholder\"",
			"}"
		],
		"description": "Creates a bubble tea model with Init, Update, and View methods."
	},
	"Create Tea Command and Message": {
		"prefix": "teamsg",
		"description": "Creates a tea command that takes no data, and a corresponding message",
		"body": [
			"// Msg${1} instructs the model... TODO",
			"type Msg${1} struct{}",
			"",
			"// Cmd${1} emits the ${1} message.",
			"func Cmd${1}() tea.Msg { return Msg${1}{} }",
		]
	},
	"Create Tea Command and Message containing data": {
		"prefix": "teamsgwithdata",
		"description": "Creates a tea command that takes data, and a corresponding message",
		"body": [
			"// Msg${1} instructs the mode ${2:... TODO}",
			"type Msg${1} struct{",
			"\t${3:data} ${4:string}",	
			"}",
			"",
			"// Cmd${1} emits the ${1} message.",
			"func Cmd${1}(d ${4:string}) tea.Msg {",
			"\treturn Msg${1}{",
			"\t\t${3:data}: d,",
			"\t}",
			"}",
		]
	}
}
